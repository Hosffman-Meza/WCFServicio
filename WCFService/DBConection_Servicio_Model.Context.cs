//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDServicioEntities : DbContext
    {
        public BDServicioEntities()
            : base("name=BDServicioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_Select_TipoServicio_Result> SP_Select_TipoServicio_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_TipoServicio_Result>("SP_Select_TipoServicio_Result");
        }
    
        public virtual ObjectResult<SP_Select_Ubicacion_Result> SP_Select_Ubicacion_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Ubicacion_Result>("SP_Select_Ubicacion_Result");
        }
    
        public virtual ObjectResult<verClientes_Result> verClientes_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verClientes_Result>("verClientes_Result");
        }
    
        public virtual ObjectResult<verClientesActivos_Result> verClientesActivos_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verClientesActivos_Result>("verClientesActivos_Result");
        }
    
        public virtual ObjectResult<verServicio_Result> verServicio_Result()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verServicio_Result>("verServicio_Result");
        }
    
        public virtual ObjectResult<SP_In_Ubicacion_Result> SP_In_Ubicacion_Result(Nullable<int> idMaestro, string nombre, string tipo)
        {
            var idMaestroParameter = idMaestro.HasValue ?
                new ObjectParameter("IdMaestro", idMaestro) :
                new ObjectParameter("IdMaestro", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_In_Ubicacion_Result>("SP_In_Ubicacion_Result", idMaestroParameter, nombreParameter, tipoParameter);
        }
    
        public virtual ObjectResult<SP_Del_Cliente_Result> SP_Del_Cliente_Result(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Del_Cliente_Result>("SP_Del_Cliente_Result", idClienteParameter);
        }
    
        public virtual ObjectResult<SP_Del_Servicio_Result> SP_Del_Servicio_Result(Nullable<int> idServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Del_Servicio_Result>("SP_Del_Servicio_Result", idServicioParameter);
        }
    
        public virtual ObjectResult<SP_Del_TipoServicio_Result> SP_Del_TipoServicio_Result(Nullable<int> idTipoServicio)
        {
            var idTipoServicioParameter = idTipoServicio.HasValue ?
                new ObjectParameter("IdTipoServicio", idTipoServicio) :
                new ObjectParameter("IdTipoServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Del_TipoServicio_Result>("SP_Del_TipoServicio_Result", idTipoServicioParameter);
        }
    
        public virtual ObjectResult<SP_Del_Ubicacion_Result> SP_Del_Ubicacion_Result(Nullable<int> idUbicacion)
        {
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Del_Ubicacion_Result>("SP_Del_Ubicacion_Result", idUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_In_Cliente_Result> SP_In_Cliente_Result(string nombre, string apellido, string telefono, string tipo, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_In_Cliente_Result>("SP_In_Cliente_Result", nombreParameter, apellidoParameter, telefonoParameter, tipoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_In_Servicio_Result> SP_In_Servicio_Result(Nullable<int> idTipoServicio, string nombre, Nullable<decimal> costoBase)
        {
            var idTipoServicioParameter = idTipoServicio.HasValue ?
                new ObjectParameter("IdTipoServicio", idTipoServicio) :
                new ObjectParameter("IdTipoServicio", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoBaseParameter = costoBase.HasValue ?
                new ObjectParameter("CostoBase", costoBase) :
                new ObjectParameter("CostoBase", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_In_Servicio_Result>("SP_In_Servicio_Result", idTipoServicioParameter, nombreParameter, costoBaseParameter);
        }
    
        public virtual ObjectResult<SP_In_TipoServicio_Result> SP_In_TipoServicio_Result(string descripcion, Nullable<bool> estado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_In_TipoServicio_Result>("SP_In_TipoServicio_Result", descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_Up_Cliente_Result> SP_Up_Cliente_Result(Nullable<int> idCliente, string nombre, string apellido, string telefono, string tipo, string estado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Up_Cliente_Result>("SP_Up_Cliente_Result", idClienteParameter, nombreParameter, apellidoParameter, telefonoParameter, tipoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_Up_Servicio_Result> SP_Up_Servicio_Result(Nullable<int> idServicio, Nullable<int> idTipoServicio, string nombre, Nullable<decimal> costoBase)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idTipoServicioParameter = idTipoServicio.HasValue ?
                new ObjectParameter("IdTipoServicio", idTipoServicio) :
                new ObjectParameter("IdTipoServicio", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoBaseParameter = costoBase.HasValue ?
                new ObjectParameter("CostoBase", costoBase) :
                new ObjectParameter("CostoBase", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Up_Servicio_Result>("SP_Up_Servicio_Result", idServicioParameter, idTipoServicioParameter, nombreParameter, costoBaseParameter);
        }
    
        public virtual ObjectResult<SP_Up_TipoServicio_Result> SP_Up_TipoServicio_Result(Nullable<int> idTipoServicio, string descripcion, Nullable<bool> estado)
        {
            var idTipoServicioParameter = idTipoServicio.HasValue ?
                new ObjectParameter("IdTipoServicio", idTipoServicio) :
                new ObjectParameter("IdTipoServicio", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Up_TipoServicio_Result>("SP_Up_TipoServicio_Result", idTipoServicioParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_Up_Ubicacion_Result> SP_Up_Ubicacion_Result(Nullable<int> idMaestro, string nombre, string tipo, Nullable<int> idUbicacion)
        {
            var idMaestroParameter = idMaestro.HasValue ?
                new ObjectParameter("IdMaestro", idMaestro) :
                new ObjectParameter("IdMaestro", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Up_Ubicacion_Result>("SP_Up_Ubicacion_Result", idMaestroParameter, nombreParameter, tipoParameter, idUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_selectOne_TipoServicio_Result> SP_selectOne_TipoServicio_Result(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_selectOne_TipoServicio_Result>("SP_selectOne_TipoServicio_Result", idParameter);
        }
    }
}
